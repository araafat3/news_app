## This workflow uses actions that are not certified by GitHub.
## They are provided by a third-party and are governed by
## separate terms of service, privacy policy, and support
## documentation.
#
#name: CI/CD
#
#on:
#  push:
#    branches:
#      - main
#  pull_request:
#    branches:
#      - main
#  # Allows you to run this workflow manually from the Actions tab
#  workflow_dispatch:
#
#jobs:
#  flutter_test:
#    name: Run flutter test
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: checkout repo
#        uses: actions/checkout@v4
#
##      - name: Set Up Java
##        uses: actions/setup-java@v3.12.0
##        with:
##          distribution: 'temurin'
##          java-version: '17'
##          cache: 'gradle'
#
##      - name: Cancel Previos Runs
##        uses: styfle/cancel-workflow-action@0.9.1
##        with:
##          access_token: ${{github.token}}
#
#      - uses: subosito/flutter-action@v2.14.0
#        with:
##          flutter-version: "3.0.0"
#          channel: "stable"
#          cache: true
#
#      - name: Install dependencies
#        run: flutter pub get
#
#      - name: Verify formatting
#        run: dart format --output=none --set-exit-if-changed
#
##      # Uncomment this step to verify the use of 'dart format' on each commit.
##      - name: Verify formatting
##        run: dart format --output=none --set-exit-if-changed .
#
##      # Consider passing '--fatal-infos' for slightly stricter analysis.
##      # --fatal-warnings stops execution if any warnings are found
##      # Checks for Symantic errors. Can be configured using analysis_options.yaml
##      - name: Analyze project source
##        run: |
##          dart fix --dry-run
##          dart fix --apply
##          flutter analyze
#
#      # Your project will need to have tests in test/ and a dependency on
#      # package:test for this step to succeed. Note that Flutter projects will
#      # want to change this to 'flutter test'.
#      - name: Run tests
#        run: flutter test
#
##  build_ios:
##    name: Build Flutter (iOS)
##    needs: [flutter_test]
##    runs-on: macos-latest
##    steps:
##      - uses: actions/checkout@v4
##
##      - uses: subosito/flutter-action@v2.14.0
##        with:
###          flutter-version: "3.0.0"
##          channel: "stable"
##          cache: true
##
##      - run: flutter pub get
##      - run: flutter clean
##      - run: flutter build ipa --release --obfuscate --split-debug-info= --split-debug-info=build/app/outputs/symbols  --no-tree-shake-icons
#
#  # you can write what u want like name
#  build_appbundle:
#    # use [run-ci] for trigger the workflow
##    if: ${{ ! startsWith(github.ref, 'refs/tags/') }}
#    if: "contains(github.event.head_commit.message, 'run-ci')"
#    name: Build Flutter (Android)
#    needs: [flutter_test]
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
##      - uses: actions/setup-java@v3
##        with:
##          java-version: "12.x"
##          cache: 'gradle'
#
#      - uses: subosito/flutter-action@v2.14.0
#        with:
##          flutter-version: "3.0.0"
#          channel: "stable"
#          cache: true
#
#      - run: flutter pub get
#      - run: flutter clean
#      - run: flutter build appbundle --release --obfuscate --split-debug-info= --split-debug-info=build/app/outputs/symbols  --no-tree-shake-icons
